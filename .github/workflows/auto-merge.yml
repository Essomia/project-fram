name: Auto Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  automerge:
    # Only run this job when the PR is created by Dependabot
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      checks: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Wait for status checks
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            const requiredChecks = pr.data.base.repo.required_status_checks?.contexts || [];
            if (requiredChecks.length === 0) return;
            let completed = false;
            for (let i = 0; i < 30; i++) {
              const { data: status } = await github.rest.repos.getCombinedStatusForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: pr.data.head.sha,
              });
              const contexts = status.statuses.map(s => s.context);
              if (requiredChecks.every(c => status.statuses.find(s => s.context === c && s.state === 'success'))) {
                completed = true;
                break;
              }
              await new Promise(r => setTimeout(r, 10000));
            }
            if (!completed) {
              core.setFailed('Required status checks did not pass in time.');
            }

      - name: Merge PR
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'squash'
            });
